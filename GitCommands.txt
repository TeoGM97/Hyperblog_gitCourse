git init => Inicia git en la carpeta en la que estoy.
git status => muestra el estado de git en el momento
git add nombreArchivo => agrega un archivo a git
git rm nombreArchivo => elimina un archivo de git pero sin la ram
git rm --cached nombreArchivo => elimina el archivo por completo con el cache en ram
git commit => Envia los cambios al repositorio (mala practica, se debe dejar un mensaje)
git commit -m "mensaje" => cambios al repositorio con mensaje
git config => configuraciones de git
git config --list => configuraciones en lista con su valor
git config --list --show-origin => Muesta donde estan las configuraciones guardadas
git config --global user.name "Nombre" => Cambia la configuracion del nombre en git
(doble guion significa que vamos a usar una palabra completa, uno solo que se va a usar la forma corta como ls o rm)
git log nombreArchivo => muestra la historia de este archivo. Los numeros son el tag o nombre de esa modificacion. Muestra version, rama, autor, fecha, nombre del commit y los demas historiales

git show nombreArchivo => cambios en un archivo. Muestra:
- el ultimo commit, su ID, HEAD y la rama
- Autor y fecha
- Mensaje del commit
- diff: version anterior vs version nueva
- version a y version b.
- Indicador de bites que cambiaron y su posicion
- Cambios que se hicieron en el archivo

Si doy un commit sin un mensaje me envia a una ventana donde me pide que de el mensaje:
- Para escribir un mensaje: esc + i
- Para salirme de ahi: esc + shift + zz

git diff numeroIidicadorDeCommit1 numeroIidicadorDeCommit2 => compara ambos commits
git reset --hard numeroIidicadorDeCommit => Vuelve completamente a esa version. Si damos git log en ese momento, veremos que literalmente todo lo que habiamos hecho despues de ese commit.
git reset --soft numeroIidicadorDeCommit => Volvemos a la version anterior pero lo que tengamos en staging queda en staging, solo que en el directorio de trabajo, cambia.
git checkout numeroIidicadorDeCommit nombreArchivo => Me cambia ese archivo por esa version, pero sin guardarse, solo lo muestra. (OJO! NO HACER COMMIT SI NO SE QUIERE HACER PERMANENTE ESE CAMBIO)
git checkout master nombreArchivo => Vuelve a la version mas reciente del archivo

